# Will be fix in lame 3.100
# See http://lame.cvs.sourceforge.net/viewvc/lame/lame/configure.in?revision=1.147
# http://lame.cvs.sourceforge.net/viewvc/lame/lame/configure.in?r1=1.146&r2=1.147
--- libmp3lame/i386/Makefile.am.orig    2011/04/04 09:42:34 1.26
+++ libmp3lame/i386/Makefile.am	2013/06/12 09:16:29	1.28
@@ -1,6 +1,6 @@
-## $Id: Makefile.am,v 1.26 2011/04/04 09:42:34 aleidinger Exp $
+## $Id: Makefile.am,v 1.28 2013/06/12 09:16:29 rbrito Exp $

-AUTOMAKE_OPTIONS = foreign $(top_srcdir)/ansi2knr
+AUTOMAKE_OPTIONS = foreign

 DEFS = @DEFS@ @CONFIG_DEFS@

@@ -15,6 +15,7 @@
 if HAVE_NASM
 noinst_LTLIBRARIES = liblameasmroutines.la
 liblameasmroutines_la_SOURCES = $(nasm_sources)
+liblameasmroutines_la_DEPENDENCIES = $(nasm_sources:.nas.lo)
 am_liblameasmroutines_la_OBJECTS = \
 	choose_table$U.lo \
 	cpu_feat$U.lo \
@@ -53,11 +54,10 @@
 	$(NASM) $(NASMFLAGS) $< -o $@ -l $@.lst

 .nas.lo: $< nasm.h
-	mkdir -p .libs
 	$(ECHO) '# Generated by ltmain.sh - GNU libtool 1.5.22 (1.1220.2.365 2005/12/18 22:14:06)' >$@
-	$(ECHO) "pic_object='.libs/$*.o'" >>$@
-	$(ECHO) "non_pic_object='.libs/$*.o'" >>$@
-	$(NASM) $(NASMFLAGS) $< -o .libs/$*.o -l $@.lst
+	$(ECHO) "pic_object='$*.o'" >>$@
+	$(ECHO) "non_pic_object='$*.o'" >>$@
+	$(NASM) $(NASMFLAGS) $< -o $*.o -l $@.lst

 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
 	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
--- doc/html/Makefile.am.orig	2010/09/30 20:58:40	1.7
+++ doc/html/Makefile.am	2013/06/12 09:16:29	1.9
@@ -1,6 +1,6 @@
-## $Id: Makefile.am,v 1.7 2010/09/30 20:58:40 jaz001 Exp $
+## $Id: Makefile.am,v 1.9 2013/06/12 09:16:29 rbrito Exp $

-AUTOMAKE_OPTIONS = foreign ansi2knr
+AUTOMAKE_OPTIONS = foreign

 docdir = $(datadir)/doc
 pkgdocdir = $(docdir)/$(PACKAGE)
@@ -24,4 +24,3 @@
 	vbr.html

 EXTRA_DIST = $(pkghtml_DATA)
-
--- doc/man/Makefile.am.orig	2000/10/22 11:39:44	1.1
+++ doc/man/Makefile.am	2013/06/12 09:16:29	1.2
@@ -1,7 +1,6 @@
-## $Id: Makefile.am,v 1.1 2000/10/22 11:39:44 aleidinger Exp $
+## $Id: Makefile.am,v 1.2 2013/06/12 09:16:29 rbrito Exp $

-AUTOMAKE_OPTIONS = foreign ansi2knr
+AUTOMAKE_OPTIONS = foreign

 man_MANS = lame.1
 EXTRA_DIST = ${man_MANS}
-
--- configure.in	2012/02/10 18:06:28	1.140.2.5
+++ configure.in	2016/01/29 21:06:26	1.147
@@ -1,4 +1,4 @@
-dnl $Id: configure.in,v 1.140.2.5 2012/02/10 18:06:28 rbrito Exp $
+dnl $Id: configure.in,v 1.147 2016/01/29 21:06:26 aleidinger Exp $
 dnl
 dnl
 dnl don't forget to set ASM_FOR_ARCH to a space delimited list of
@@ -17,8 +17,8 @@
 dnl FRONTEND_CFLAGS
 dnl FRONTEND_LDADD

-AC_PREREQ(2.68)
+AC_PREREQ(2.69)
 AC_INIT([lame],[3.99.5],[lame-dev@lists.sf.net])
 AC_CONFIG_SRCDIR([libmp3lame/lame.c])
 AC_LANG([C])

@@ -74,12 +74,17 @@
 if test "${GCC}" = "yes"; then
 	AC_MSG_CHECKING(version of GCC)
 	GCC_version=`${CC} --version | sed -n '1s/^[[^ ]]* (.*) //;s/ .*$//;1p'`
+	case ${GCC_version} in
+	[0-9]*[0-9]*)
+		;;
+	*)
+		# probably not gcc...
+		GCC_version=`${CC} --version | sed -n 's/.*clang version /clang_version_/;s/ .*$//;1p'`
+		;;
+	esac
 	AC_MSG_RESULT(${GCC_version})
 fi

-dnl more automake stuff
-AM_C_PROTOTYPES
-
 AC_CHECK_HEADER(dmalloc.h)
 if test "${ac_cv_header_dmalloc_h}" = "yes"; then
 	AM_WITH_DMALLOC
@@ -96,9 +101,19 @@
 		 sys/soundcard.h \
 		 sys/time.h \
 		 unistd.h \
-		 xmmintrin.h \
 		 linux/soundcard.h)

+dnl Checks for actually working SSE intrinsics
+AC_MSG_CHECKING(working SSE intrinsics)
+AC_COMPILE_IFELSE(
+	[AC_LANG_PROGRAM(
+		[[#include <xmmintrin.h>]],
+		[[_mm_sfence();]])],
+	[AC_DEFINE([HAVE_XMMINTRIN_H], [1], [Define if SSE intrinsics work.])
+	 ac_cv_header_xmmintrin_h=yes],
+	[ac_cv_header_xmmintrin_h=no])
+AC_MSG_RESULT(${ac_cv_header_xmmintrin_h})
+
 dnl Checks for typedefs, structures, and compiler characteristics.
 AC_C_CONST
 AC_C_INLINE
@@ -782,6 +797,11 @@
 		OPTIMIZATION="-O3 -fomit-frame-pointer -ffast-math"
 		OPTIMIZATION_FULL="-fbranch-count-reg -fforce-addr"
 		;;
+	clang_version_3.*)
+		OPTIMIZATION="-O3 ${OMIT_FRAME_POINTER} -ffast-math"
+		OPTIMIZATION_FULL="-fmove-all-movables -freduce-all-givs \
+			-fbranch-count-reg -fforce-addr -fforce-mem"
+		;;
 	*)
 		# default
 		OPTIMIZATION="-O3 ${OMIT_FRAME_POINTER} -ffast-math \
@@ -941,7 +961,11 @@

 	case "${CONFIG_DEBUG}" in
 	no)
-		AC_DEFINE(NDEBUG, 1, no debug build)
+dnl	Comment out the NDEBUG on release build, they check for issues
+dnl	which should also be rejected in a release build.
+dnl	The real solution would be to do user friendly error messages
+dnl	instead of a core dump. This is a quick and user-unfriendly fix.
+dnl		AC_DEFINE(NDEBUG, 1, no debug build)
 		;;
 	norm|yes)
 		AC_DEFINE(ABORTFP, 1, debug define)
@@ -1152,6 +1176,28 @@

 AC_SUBST(CONFIG_DEFS)

-AC_CONFIG_FILES([Makefile libmp3lame/Makefile libmp3lame/i386/Makefile libmp3lame/vector/Makefile frontend/Makefile mpglib/Makefile doc/Makefile doc/html/Makefile doc/man/Makefile include/Makefile Dll/Makefile misc/Makefile debian/Makefile dshow/Makefile ACM/Makefile ACM/ADbg/Makefile ACM/ddk/Makefile ACM/tinyxml/Makefile lame.spec mac/Makefile macosx/Makefile macosx/English.lproj/Makefile macosx/LAME.xcodeproj/Makefile vc_solution/Makefile])
+AC_CONFIG_FILES([Makefile \
+		 libmp3lame/Makefile \
+		 libmp3lame/i386/Makefile \
+		 libmp3lame/vector/Makefile \
+		 frontend/Makefile \
+		 mpglib/Makefile \
+		 doc/Makefile \
+		 doc/html/Makefile \
+		 doc/man/Makefile \
+		 include/Makefile \
+		 Dll/Makefile \
+		 misc/Makefile \
+		 dshow/Makefile \
+		 ACM/Makefile \
+		 ACM/ADbg/Makefile \
+		 ACM/ddk/Makefile \
+		 ACM/tinyxml/Makefile \
+		 lame.spec \
+		 mac/Makefile \
+		 macosx/Makefile \
+		 macosx/English.lproj/Makefile \
+		 macosx/LAME.xcodeproj/Makefile \
+		 vc_solution/Makefile])

 AC_OUTPUT
--- Makefile.am	2016-05-16 14:35:16.912596639 +0200
+++ Makefile.am.new	2016-05-16 14:35:03.720283527 +0200
@@ -4,7 +4,7 @@

 .PHONY: test

-SUBDIRS = mpglib libmp3lame frontend Dll debian doc include misc dshow ACM \
+SUBDIRS = mpglib libmp3lame frontend Dll doc include misc dshow ACM \
 	mac macosx vc_solution

 CLEANFILES = testcase.new.mp3
--- /dev/null
+++ m4/gtk-2.0.m4
@@ -0,0 +1,185 @@
+# Configure paths for GTK+
+# Owen Taylor     1997-2001
+
+dnl AM_PATH_GTK([MINIMUM-VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND [, MODULES]]]])
+dnl Test for GTK+, and define GTK_CFLAGS and GTK_LIBS, if gthread is specified in MODULES,
+dnl pass to pkg-config
+dnl
+AC_DEFUN([AM_PATH_GTK],
+[dnl
+dnl Get the cflags and libraries from pkg-config
+dnl
+AC_ARG_ENABLE(gtktest, [  --disable-gtktest       do not try to compile and run a test GTK+ program],
+		    , enable_gtktest=yes)
+
+  pkg_config_args=gtk+-2.0
+  for module in . $4
+  do
+      case "$module" in
+         gthread)
+             pkg_config_args="$pkg_config_args gthread-2.0"
+         ;;
+      esac
+  done
+
+  no_gtk=""
+
+  AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+  PKG_PROG_PKG_CONFIG([0.7])
+
+  min_gtk_version=ifelse([$1], ,2.0.0,$1)
+  AC_MSG_CHECKING(for GTK+ - version >= $min_gtk_version)
+
+  if test x$PKG_CONFIG != xno ; then
+    ## don't try to run the test against uninstalled libtool libs
+    if $PKG_CONFIG --uninstalled $pkg_config_args; then
+	  echo "Will use uninstalled version of GTK+ found in PKG_CONFIG_PATH"
+	  enable_gtktest=no
+    fi
+
+    if $PKG_CONFIG --atleast-version $min_gtk_version $pkg_config_args; then
+	  :
+    else
+	  no_gtk=yes
+    fi
+  fi
+
+  if test x"$no_gtk" = x ; then
+    GTK_CFLAGS=`$PKG_CONFIG $pkg_config_args --cflags`
+    GTK_LIBS=`$PKG_CONFIG $pkg_config_args --libs`
+    gtk_config_major_version=`$PKG_CONFIG --modversion gtk+-2.0 | \
+           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
+    gtk_config_minor_version=`$PKG_CONFIG --modversion gtk+-2.0 | \
+           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
+    gtk_config_micro_version=`$PKG_CONFIG --modversion gtk+-2.0 | \
+           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
+    if test "x$enable_gtktest" = "xyes" ; then
+      ac_save_CFLAGS="$CFLAGS"
+      ac_save_LIBS="$LIBS"
+      CFLAGS="$CFLAGS $GTK_CFLAGS"
+      LIBS="$GTK_LIBS $LIBS"
+dnl
+dnl Now check if the installed GTK+ is sufficiently new. (Also sanity
+dnl checks the results of pkg-config to some extent)
+dnl
+      rm -f conf.gtktest
+      AC_TRY_RUN([
+#include <gtk/gtk.h>
+#include <stdio.h>
+#include <stdlib.h>
+
+int
+main ()
+{
+  int major, minor, micro;
+  char *tmp_version;
+
+  fclose (fopen ("conf.gtktest", "w"));
+
+  /* HP/UX 9 (%@#!) writes to sscanf strings */
+  tmp_version = g_strdup("$min_gtk_version");
+  if (sscanf(tmp_version, "%d.%d.%d", &major, &minor, &micro) != 3) {
+     printf("%s, bad version string\n", "$min_gtk_version");
+     exit(1);
+   }
+
+  if ((gtk_major_version != $gtk_config_major_version) ||
+      (gtk_minor_version != $gtk_config_minor_version) ||
+      (gtk_micro_version != $gtk_config_micro_version))
+    {
+      printf("\n*** 'pkg-config --modversion gtk+-2.0' returned %d.%d.%d, but GTK+ (%d.%d.%d)\n",
+             $gtk_config_major_version, $gtk_config_minor_version, $gtk_config_micro_version,
+             gtk_major_version, gtk_minor_version, gtk_micro_version);
+      printf ("*** was found! If pkg-config was correct, then it is best\n");
+      printf ("*** to remove the old version of GTK+. You may also be able to fix the error\n");
+      printf("*** by modifying your LD_LIBRARY_PATH enviroment variable, or by editing\n");
+      printf("*** /etc/ld.so.conf. Make sure you have run ldconfig if that is\n");
+      printf("*** required on your system.\n");
+      printf("*** If pkg-config was wrong, set the environment variable PKG_CONFIG_PATH\n");
+      printf("*** to point to the correct configuration files\n");
+    }
+  else if ((gtk_major_version != GTK_MAJOR_VERSION) ||
+	   (gtk_minor_version != GTK_MINOR_VERSION) ||
+           (gtk_micro_version != GTK_MICRO_VERSION))
+    {
+      printf("*** GTK+ header files (version %d.%d.%d) do not match\n",
+	     GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION);
+      printf("*** library (version %d.%d.%d)\n",
+	     gtk_major_version, gtk_minor_version, gtk_micro_version);
+    }
+  else
+    {
+      if ((gtk_major_version > major) ||
+        ((gtk_major_version == major) && (gtk_minor_version > minor)) ||
+        ((gtk_major_version == major) && (gtk_minor_version == minor) && (gtk_micro_version >= micro)))
+      {
+        return 0;
+       }
+     else
+      {
+        printf("\n*** An old version of GTK+ (%d.%d.%d) was found.\n",
+               gtk_major_version, gtk_minor_version, gtk_micro_version);
+        printf("*** You need a version of GTK+ newer than %d.%d.%d. The latest version of\n",
+	       major, minor, micro);
+        printf("*** GTK+ is always available from ftp://ftp.gtk.org.\n");
+        printf("***\n");
+        printf("*** If you have already installed a sufficiently new version, this error\n");
+        printf("*** probably means that the wrong copy of the pkg-config shell script is\n");
+        printf("*** being found. The easiest way to fix this is to remove the old version\n");
+        printf("*** of GTK+, but you can also set the PKG_CONFIG environment to point to the\n");
+        printf("*** correct copy of pkg-config. (In this case, you will have to\n");
+        printf("*** modify your LD_LIBRARY_PATH enviroment variable, or edit /etc/ld.so.conf\n");
+        printf("*** so that the correct libraries are found at run-time))\n");
+      }
+    }
+  return 1;
+}
+],, no_gtk=yes,[echo $ac_n "cross compiling; assumed OK... $ac_c"])
+       CFLAGS="$ac_save_CFLAGS"
+       LIBS="$ac_save_LIBS"
+     fi
+  fi
+  if test "x$no_gtk" = x ; then
+     AC_MSG_RESULT(yes (version $gtk_config_major_version.$gtk_config_minor_version.$gtk_config_micro_version))
+     ifelse([$2], , :, [$2])
+  else
+     AC_MSG_RESULT(no)
+     if test "$PKG_CONFIG" = "no" ; then
+       echo "*** A new enough version of pkg-config was not found."
+       echo "*** See http://pkgconfig.sourceforge.net"
+     else
+       if test -f conf.gtktest ; then
+        :
+       else
+          echo "*** Could not run GTK+ test program, checking why..."
+	  ac_save_CFLAGS="$CFLAGS"
+	  ac_save_LIBS="$LIBS"
+          CFLAGS="$CFLAGS $GTK_CFLAGS"
+          LIBS="$LIBS $GTK_LIBS"
+          AC_TRY_LINK([
+#include <gtk/gtk.h>
+#include <stdio.h>
+],      [ return ((gtk_major_version) || (gtk_minor_version) || (gtk_micro_version)); ],
+        [ echo "*** The test program compiled, but did not run. This usually means"
+          echo "*** that the run-time linker is not finding GTK+ or finding the wrong"
+          echo "*** version of GTK+. If it is not finding GTK+, you'll need to set your"
+          echo "*** LD_LIBRARY_PATH environment variable, or edit /etc/ld.so.conf to point"
+          echo "*** to the installed location  Also, make sure you have run ldconfig if that"
+          echo "*** is required on your system"
+	  echo "***"
+          echo "*** If you have an old version installed, it is best to remove it, although"
+          echo "*** you may also be able to get things to work by modifying LD_LIBRARY_PATH" ],
+        [ echo "*** The test program failed to compile or link. See the file config.log for the"
+          echo "*** exact error that occured. This usually means GTK+ is incorrectly installed."])
+          CFLAGS="$ac_save_CFLAGS"
+          LIBS="$ac_save_LIBS"
+       fi
+     fi
+     GTK_CFLAGS=""
+     GTK_LIBS=""
+     ifelse([$3], , :, [$3])
+  fi
+  AC_SUBST(GTK_CFLAGS)
+  AC_SUBST(GTK_LIBS)
+  rm -f conf.gtktest
+])
